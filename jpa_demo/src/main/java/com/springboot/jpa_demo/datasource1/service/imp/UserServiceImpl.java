package com.springboot.jpa_demo.datasource1.service.imp;

import com.alibaba.fastjson.JSONObject;
import com.springboot.jpa_demo.datasource1.domain.Gym;
import com.springboot.jpa_demo.datasource1.domain.Trainer;
import com.springboot.jpa_demo.datasource1.domain.User;
import com.springboot.jpa_demo.datasource1.repository.GymRepository;
import com.springboot.jpa_demo.datasource1.repository.TrainerRepository;
import com.springboot.jpa_demo.datasource1.repository.UserRepositpry;
import com.springboot.jpa_demo.datasource1.service.UserService;
import com.springboot.jpa_demo.utils.ConstantVar;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;

@Service
public class UserServiceImpl implements UserService {

    @Autowired
    UserRepositpry userRepositpry;

    //为了自动向数据库添加测试数据而引入的
    @Autowired
    GymRepository gymRepository;

    //为了自动向数据库添加测试数据而引入的
    @Autowired
    TrainerRepository trainerRepository;

    @Override
    public JSONObject addUser(User user) {
        JSONObject res=new JSONObject();
        User user1 =userRepositpry.save(user);

        res.put("data",user1);
        res.put("code", ConstantVar.SUCCESSFUL_CODE);
        res.put("message",ConstantVar.SUCCESSFUL_MESSAGE);
        return res;
    }

    @Override
    public JSONObject login(int id,String password) {
        JSONObject res=new JSONObject();
        User user=userRepositpry.findById(id);
        if(user!=null&&user.getPassword().equals(password)){
            res.put("data",user);
            res.put("code", ConstantVar.SUCCESSFUL_CODE);
            res.put("message",ConstantVar.SUCCESSFUL_MESSAGE);

            int result=generateData();
            if (result==1){
                System.out.println("AutoGenerateData successfully");
            }else{
                System.out.println("AutoGenerateData fail");
            }
        }else{
            res.put("code", ConstantVar.ID_PASS_INCORRECT);
            res.put("message",ConstantVar.ID_PASS_INCORRECT_MSG);
        }

        return res;
    }


    @Override
    public User findUserById(int userId){
        return userRepositpry.findById(userId);
    }

    //这个方法用来自动生成数据库里面的测试数据
    //在登录成功的时候用
    public int generateData(){
        int phonePrefix=1881095989;
        int idPrefix=100;
        String location="北京市海淀区北京交通大学";
        String introduction="我的性格类型是";
        try {
            for(int i=0; i<5; i++){
                //addUser
                User userInstance=new User(String.valueOf(i),"male",String.valueOf(phonePrefix+i),i+10,String.valueOf(i));
                userRepositpry.saveAndFlush(userInstance);

                //addGym
                Gym gymInstance=new Gym(String.valueOf(i),location+String.valueOf(i),String.valueOf(phonePrefix+i));
                Gym gymOK = gymRepository.saveAndFlush(gymInstance);

                //addTrainer
                Trainer trainerInstance=new Trainer(String.valueOf(i),String.valueOf(i),String.valueOf(i),introduction,String.valueOf(phonePrefix),gymOK);
                trainerRepository.saveAndFlush(trainerInstance);

            }
        }catch (Exception e){
            e.printStackTrace();
            return 2;
        }
        return 1;
    }
}
